;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; My .emacs for Ubuntu 10.4
;;
;; Author    : Davide Angelocola <davide.angelocola@gmail.com>
;; Time-stamp: <2010-12-29 02:41:25 dfa>
;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; clojure-mode 
;;
;; http://wiki.unto.net/setting-up-clojure-and-slime
;; http://riddell.us/ClojureWithEmacsSlimeSwankOnUbuntu.html

(add-to-list 'load-path "~/apps/clojure-mode")
(add-to-list 'load-path "~/apps/swank-clojure")
(add-to-list 'load-path "~/apps/slime")

(setq swank-clojure-jar-path "~/apps/clojure/1.1/clojure.jar")

(require 'clojure-mode)
(require 'swank-clojure)
(require 'slime)

(add-hook 'clojure-mode-hook
	  (lambda ()
	    ;; custom keybindings
	    (defun complete-clojure () 
	      (interactive)
	      (smart-tab 'slime-complete-symbol))

	    (local-set-key (kbd "<tab>") 'complete-clojure)))

(eval-after-load "slime" (slime-setup '(slime-repl)))
(slime-setup)

; slime-repl customisation
(add-hook 'slime-repl-hook
 (lambda ()
   (slime-repl-eval-string "(set! *print-length* 10)")
   (slime-repl-eval-string "(use 'clojure.contrib.repl-utils)")))

;; slime (mapped to F3)
(defun force-switch-to-slime() 
  (interactive)
  (if (slime-connected-p)
    (slime-switch-to-output-buffer)
    (slime)))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; erc-mode
   
(require 'erc-join)

(add-hook 'erc-mode-hook
          '(lambda ()
	     (setq erc-user-full-name "Davide Angelocola")
	     (setq erc-email-userid "davide.angelocola@gmail.com")
	     (setq erc-interpret-mirc-color t)
	     (setq erc-kill-buffer-on-part t)
	     (setq erc-kill-queries-on-quit t)
	     (setq erc-kill-server-buffer-on-quit t)
	     (erc-button-mode -1) 
             (require 'erc-pcomplete)
             (pcomplete-erc-setup)
             (erc-completion-mode 1)))

(defun irc()
  "Connect to IRC."
  (interactive)
  (let ((channel (car (erc-channel-list nil))))
    (if (not channel)
	(when (y-or-n-p "connect to IRC? ")
	  (erc))
      (switch-to-buffer channel))))

;; autojoin
(erc-autojoin-mode 1)
(setq erc-autojoin-channels-alist
          '(("freenode.net" "#clojure" "#emacs")
	    ("signalos.org" "#ahccc")))
